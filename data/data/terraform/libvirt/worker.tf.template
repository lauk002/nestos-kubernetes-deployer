terraform {
  required_providers {
    libvirt = {
      source = "dmacvicar/libvirt"
      version = "0.7.6"
    }
  }
}

provider "libvirt" {
  uri = "qemu+ssh://{{.Platform.Username}}@{{.Platform.Remote_IP}}/system"
}

variable "instance_count" {
  default = "{{.Worker.Count}}"
}

variable "ip" {
  type    = list(string)
  default = {{.Worker.IP}}
}

resource "libvirt_volume" "volume" {
  count  = var.instance_count
  name   =  "${format("%s-volume", element({{.Worker.Hostname}}, count.index))}"
  pool   = "default"
  source = "{{.Platform.OSImage_Path}}"
}

resource "libvirt_ignition" "ignition" {
  count   = var.instance_count
  name    = "${format("%s-ignition", element({{.Worker.Hostname}}, count.index))}"
  content = file(element({{.Worker.Ign_Path}}, count.index))
}

resource "libvirt_network" "network" {
  name      = "nkd-net"
  mode      = "nat"
  domain    = "k8s.local"
  addresses = ["{{.Platform.CIDR}}"]

  dhcp {
    enabled = false
  }

  dns {
    enabled = true
    local_only = false
  }
  
  routes {
    cidr = "{{.Platform.CIDR}}"
    gateway = "{{.Platform.Gateway}}"
  }
}

resource "libvirt_domain" "nestos" {
  count           = var.instance_count
  name            = element({{.Worker.Hostname}}, count.index)
  vcpu            = element({{.Worker.CPU}}, count.index)
  memory          = element({{.Worker.RAM}}, count.index)
  coreos_ignition = libvirt_ignition.ignition.*.id[count.index]
  autostart       = true

  disk {
    volume_id = libvirt_volume.volume.*.id[count.index]
  }

  network_interface {
    network_name   = libvirt_network.network.name
    hostname       = element({{.Worker.Hostname}}, count.index)
    addresses      = [var.ip[count.index]]
    wait_for_lease = true
  }

  graphics {
    type        = "vnc"
    listen_type = "address"
  }

  console {
    type        = "pty"
    target_port = "0"
  }
}

output "ipv4" {
  value = libvirt_domain.nestos.*.network_interface.0.addresses
}